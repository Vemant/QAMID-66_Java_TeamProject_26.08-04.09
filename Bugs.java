// НАЙДЕННЫЕ БАГИ

// 1. Конструктор. Строка 19 (тест - строка 25)
// При балансе, меньшем минус лимита, должен ловить ошибку
// IllegalArgumentException. На деле создаёт конструктор
// с такими данными

// 2. Конструктор. Строка 19 (тест - строка 45)
// При балансе, равном минус лимиту, должен ловить ошибку
// IllegalArgumentException. На деле создаёт конструктор
// с такими данными

// 3. Конструктор. Строка 19 (тест - строка 66)
// При лимите, меньшем нуля, должен ловить ошибку
// IllegalArgumentException. На деле создаёт конструктор
// с такими данными

// 4. Конструктор. Строка 19 (тест - строка 87)
// При лимите, равном нулю, должен ловить ошибку
// IllegalArgumentException. На деле создаёт конструктор
// с такими данными

// 5. Pay. Строка 45 (тест строка 129). При платеже,
// равном сумме кредитного лимита и
// положительного баланса должен позволять
// сделать этот платёж (вернуть тру).
// Возвращает фолс

// 6. Pay. Строка 45 (тест - строка 174).
// При платеже, равном кредитному
// лимиту (изначальный баланс равен нулю) должен
// позволять сделать этот платёж (вернуть тру).
// Возвращает фолс

// 7. Pay. Строка 45 (тест - строка 219).
// При платеже, равном сумме кредитного лимита
// и отрицательного баланса  должен
// позволять сделать этот платёж (вернуть тру).
// Возвращает фолс

// 8. yearChange. Строка 83 (тест - строка 296)
// При положительном балансе должен выводить число 0
// Выводит число, отличное от нуля

